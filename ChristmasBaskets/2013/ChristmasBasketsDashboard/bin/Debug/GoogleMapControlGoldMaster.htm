<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
<style type="text/css">
  html { height: 100% }
  body { height: 100%; margin: 0; padding: 0 }
  #map_canvas { height: 100% }
</style>
<!--[if IE]> <script type="text/javascript" src="ie-set_timeout.js"></script> <![endif]-->
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script> 
<script type="text/javascript">
  var geocoder;
  var map;
  var showMarkerMode = 0;	//0 = All Clients, 1 = Only Assigned Clients, 2 = Only Unassigned Clients
  var assignedClientToCurrentDelivererImage = "AssignedClientToCurrentDeliverer.png";
  var assignedClientToOtherDelivererImage = "AssignedClientToOtherDeliverer.png";
  var unassignedClientImage = "UnassignedClient.png";
  var addresses = ["1010 Barrens Village Lane Roanoke, VA 24019", "900 Barrens Village Lane Roanoke, VA 24019", "950 Barrens Village Lane Roanoke, VA 24019"];
  var clients = ["4166 - Karaffa, John","4167 - Tkachuk, Vitaly", "4168 - Stephane Karaffa"];
  var clientsAssigned = [0, 1, 2];  //0 - Client unassigned, 1 - client assigned to current deliverer the htm file represents, 2 - client assigned to another deliverer other than current deliverer htm file represents
  var clientIDs = ["4166","4167", "4168"];
  var markers = [];
  var mapCenterAddress = "2147 Dale Avenue Southeast Roanoke, VA 24013";
  
  function initialize()
  {
	//Create map options
	var myOptions = {mapTypeId: google.maps.MapTypeId.ROADMAP};
   
	//Create map and geocoder
	map = new google.maps.Map(document.getElementById("map_canvas"),myOptions);
	geocoder = new google.maps.Geocoder();
	
	//Show all addresses
	for (i in clients)
	{
		setTimeout(showAddress, 250 * i, addresses[i], clients[i], clientsAssigned[i]);
    }
	
	//Center the Map
	centerMap(mapCenterAddress, 12);
  }

      //Show a single address with client info
      function showAddress(address, client, assigned)
      {
          geocoder.geocode( { 'address': address},
                              function(results, status)
                              {
                                 //Make sure we got a good result
                                 if (status == google.maps.GeocoderStatus.OK)
                                 {
                                    //Temporary working marker
                                    var marker;

                                    //Create and display marker based on assigned status
                                    if(assigned == 0)
                                    {
                                       //Client is not assigned to any deliverer
                                       marker = new google.maps.Marker({map: map, position: results[0].geometry.location, title: client + "\n" + address, icon: unassignedClientImage});
                                    }
                                    else if(assigned == 1)
                                    {
                                       //Client is assigned to current deliverer
                                       marker = new google.maps.Marker({map: map, position: results[0].geometry.location, title: client + "\n" + address, icon: assignedClientToCurrentDelivererImage});
                                    }
                                    else if(assigned == 2)
                                    {
                                       //Client is assigned to another deliverer other than current
                                       marker = new google.maps.Marker({map: map, position: results[0].geometry.location, title: client + "\n" + address, icon: assignedClientToOtherDelivererImage});
                                    }

                                    //Determine if we should show the Marker based on showMarkerMode

                                    //Show All Clients
                                    if(showMarkerMode == 0)
                                    {
                                       marker.setMap(map);
                                    }
                                    //Show Only Assigned Clients
                                    else if(showMarkerMode == 1)
                                    {
                                       //If the client is not assigned - do not show on the map
                                       if(assigned == 0)
                                       {
                                          marker.setMap(null);
                                       }
									   else
									   {
									      marker.setMap(map);
									   }
                                    }
                                    //Show Only Unassigned Clients
                                    else if(showMarkerMode == 2)
                                    {
                                       //If the client is assigned - do not show on the map
                                       if(assigned != 0)
                                       {
                                          marker.setMap(null);
                                       }
									   else
									   {
									      marker.setMap(map);
									   }
                                    }
									//Show Only Unassigned Clients and Clients that below to current Deliverer
									else if(showMarkerMode == 3)
                                    {
                                       //If the client is assigned to the current deliverer or Unassigned - show on the map
                                       if(assigned == 0  || assigned == 1)
                                       {
                                          marker.setMap(map);
				                       }
									   else
									   {
									      marker.setMap(null);
									   }
                                    }

                                    //Add marker to marker array
                                    markers.push(marker);
                                 }
                                 else
                                 {
                                    //Alert - Geocode not successful
                                    alert("showAddress - Geocode of (" + address + ") was not successful for the following reason: (" + status + ")");
                                 }
                              });
      }

      //Show a single address with client info
      function centerMap(address, zoom)
      {
         geocoder.geocode( { 'address': address},
                           function(results, status)
                           {
                              //Make sure we got a good result
                              if (status == google.maps.GeocoderStatus.OK)
                              {
                                 //Center Map
                                 map.setCenter(results[0].geometry.location);

                                 //Set Map Zoom
                                 map.setZoom(zoom);
                              }
                              else
                              {
                                 //Alert - Geocode not successful
                                 alert("centerMap - Geocode of (" + address + ") was not successful for the following reason: (" + status + ")");
                              }
                           });
      }

      //Assign Client
      function assignClient(clientID)
      {
         var clientIndex = -1;

         //Find index for Client in the ClientIDs array
         for(i in clientIDs)
         {
            if(clientIDs[i] == clientID)
            {
               clientIndex = i;
               break;
            }
         }
         //See if clientIndex was found
         if(clientIndex > -1)
         {
            if(markers)
            {
               //Alter Marker
               markers[clientIndex].setIcon(assignedClientToCurrentDelivererImage);

               //Determine if we should show the Marker based on showMarkerMode

               //Show All Clients
               if(showMarkerMode == 0)
               {
               //We are assigning a client and we should display All Clients - show clinet on the map
               markers[clientIndex].setMap(map);
               }
               //Show Only Assigned Clients
               else if(showMarkerMode == 1)
               {
                  //We are assigning a client and we should display only Assigned Clients - show client on the map
                  markers[clientIndex].setMap(map);
               }
               //Show Only Unassigned Clients
               else if(showMarkerMode == 2)
               {
                  //We are assigning a client and we should display only UnassignedClients - do not show client on the map
                  markers[clientIndex].setMap(null);
               }

               //Update clients Assigned
               clientsAssigned[clientIndex] = 1;
            }
            else
            {
               //Alert - markers[] is null
               alert("assignClient - markers[] is null");
            }
         }
         else
         {
         //Alert - clientID does not exits
         alert("assignClient - ClientID (" + clientID + ") not found in ClientIDs array");
         }
      }

      //Unassign Client
      function unassignClient(clientID)
      {
         var clientIndex = -1;

         //Find index for Client in the ClientIDs array
         for(i in clientIDs)
         {
            if(clientIDs[i] == clientID)
            {
               clientIndex = i;
               break;
            }
         }
         //See if clientIndex was found
         if(clientIndex > -1)
         {
            if(markers)
            {
               //Alter Marker
               markers[clientIndex].setIcon(unassignedClientImage);

               //Determine if we should show the Marker based on showMarkerMode

               //Show All Clients
               if(showMarkerMode == 0)
               {
               //We are unassigning a client and we should display All Clients - show clinet on the map);
               markers[clientIndex].setMap(map);
               }
               //Show Only Assigned Clients
               else if(showMarkerMode == 1)
               {
                  //We are unassigning a client and we should display only Assigned Clients - do not show client on the map
                  markers[clientIndex].setMap(null);
               }
               //Show Only Unassigned Clients
               else if(showMarkerMode == 2)
               {
                  //We are unassigning a client and we should display only UnassignedClients - show client on the map
                  markers[clientIndex].setMap(map);
               }

               //Update clients Assigned
               clientsAssigned[clientIndex] = 0;
            }
            else
            {
               //Alert - markers[] is null
               alert("unassignClient - markers[] is null");
            }
         }
         else
         {
         //Alert - clientID does not exits
         alert("unassignClient - ClientID (" + clientID + ") not found in ClientIDs array");
         }
      }
      </script>
   </head>

   <body onload="initialize()">
      <div id="map_canvas" style="height:90%;top:30px"></div>
   </body>
</html>